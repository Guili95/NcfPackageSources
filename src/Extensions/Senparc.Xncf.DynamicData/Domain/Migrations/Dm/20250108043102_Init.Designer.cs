// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Senparc.Xncf.DynamicData.Models;

#nullable disable

namespace Senparc.Xncf.DynamicData.Domain.Migrations.Dm
{
    [DbContext(typeof(DynamicDataSenparcEntities_Dm))]
    [Migration("20250108043102_Init")]
    partial class Init
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Dm:ValueGenerationStrategy", DmValueGenerationStrategy.IdentityColumn)
                .HasAnnotation("ProductVersion", "8.0.10")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            modelBuilder.Entity("Senparc.Xncf.DynamicData.Color", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INT")
                        .HasAnnotation("Dm:ValueGenerationStrategy", DmValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("AddTime")
                        .HasColumnType("TIMESTAMP");

                    b.Property<string>("AdditionNote")
                        .HasColumnType("NVARCHAR2(32767)");

                    b.Property<string>("AdminRemark")
                        .HasMaxLength(300)
                        .HasColumnType("NVARCHAR2(300)");

                    b.Property<int>("Blue")
                        .HasColumnType("INT");

                    b.Property<bool>("Flag")
                        .HasColumnType("BIT");

                    b.Property<int>("Green")
                        .HasColumnType("INT");

                    b.Property<DateTime>("LastUpdateTime")
                        .HasColumnType("TIMESTAMP");

                    b.Property<int>("Red")
                        .HasColumnType("INT");

                    b.Property<string>("Remark")
                        .HasMaxLength(300)
                        .HasColumnType("NVARCHAR2(300)");

                    b.Property<int>("TenantId")
                        .HasColumnType("INT");

                    b.HasKey("Id");

                    b.ToTable("Senparc_DynamicData_Color");
                });

            modelBuilder.Entity("Senparc.Xncf.DynamicData.ColumnMetadata", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INT")
                        .HasAnnotation("Dm:ValueGenerationStrategy", DmValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("AddTime")
                        .HasColumnType("TIMESTAMP");

                    b.Property<string>("AdminRemark")
                        .HasMaxLength(300)
                        .HasColumnType("NVARCHAR2(300)");

                    b.Property<string>("ColumnName")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("NVARCHAR2(255)");

                    b.Property<string>("ColumnType")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("NVARCHAR2(50)");

                    b.Property<string>("DefaultValue")
                        .HasColumnType("NVARCHAR2(32767)");

                    b.Property<bool>("Flag")
                        .HasColumnType("BIT");

                    b.Property<bool>("IsNullable")
                        .HasColumnType("BIT");

                    b.Property<DateTime>("LastUpdateTime")
                        .HasColumnType("TIMESTAMP");

                    b.Property<string>("Remark")
                        .HasMaxLength(300)
                        .HasColumnType("NVARCHAR2(300)");

                    b.Property<int>("TableMetadataId")
                        .HasColumnType("INT");

                    b.Property<int>("TenantId")
                        .HasColumnType("INT");

                    b.HasKey("Id");

                    b.HasIndex("TableMetadataId");

                    b.ToTable("Senparc_DynamicData_ColumnMetadata");
                });

            modelBuilder.Entity("Senparc.Xncf.DynamicData.TableData", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INT")
                        .HasAnnotation("Dm:ValueGenerationStrategy", DmValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("AddTime")
                        .HasColumnType("TIMESTAMP");

                    b.Property<string>("AdminRemark")
                        .HasMaxLength(300)
                        .HasColumnType("NVARCHAR2(300)");

                    b.Property<string>("CellValue")
                        .HasColumnType("NVARCHAR2(32767)");

                    b.Property<int>("ColumnMetadataId")
                        .HasColumnType("INT");

                    b.Property<bool>("Flag")
                        .HasColumnType("BIT");

                    b.Property<DateTime>("LastUpdateTime")
                        .HasColumnType("TIMESTAMP");

                    b.Property<string>("Remark")
                        .HasMaxLength(300)
                        .HasColumnType("NVARCHAR2(300)");

                    b.Property<int>("TableId")
                        .HasColumnType("INT");

                    b.Property<int?>("TableMetadataId")
                        .HasColumnType("INT");

                    b.Property<int>("TenantId")
                        .HasColumnType("INT");

                    b.HasKey("Id");

                    b.HasIndex("ColumnMetadataId");

                    b.HasIndex("TableMetadataId");

                    b.ToTable("Senparc_DynamicData_TableData");
                });

            modelBuilder.Entity("Senparc.Xncf.DynamicData.TableMetadata", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INT")
                        .HasAnnotation("Dm:ValueGenerationStrategy", DmValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("AddTime")
                        .HasColumnType("TIMESTAMP");

                    b.Property<string>("AdminRemark")
                        .HasMaxLength(300)
                        .HasColumnType("NVARCHAR2(300)");

                    b.Property<string>("Description")
                        .HasColumnType("NVARCHAR2(32767)");

                    b.Property<bool>("Flag")
                        .HasColumnType("BIT");

                    b.Property<DateTime>("LastUpdateTime")
                        .HasColumnType("TIMESTAMP");

                    b.Property<string>("Remark")
                        .HasMaxLength(300)
                        .HasColumnType("NVARCHAR2(300)");

                    b.Property<string>("TableName")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("NVARCHAR2(255)");

                    b.Property<int>("TenantId")
                        .HasColumnType("INT");

                    b.HasKey("Id");

                    b.ToTable("Senparc_DynamicData_TableMetadata");
                });

            modelBuilder.Entity("Senparc.Xncf.DynamicData.ColumnMetadata", b =>
                {
                    b.HasOne("Senparc.Xncf.DynamicData.TableMetadata", "TableMetadata")
                        .WithMany("ColumnMetadatas")
                        .HasForeignKey("TableMetadataId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("TableMetadata");
                });

            modelBuilder.Entity("Senparc.Xncf.DynamicData.TableData", b =>
                {
                    b.HasOne("Senparc.Xncf.DynamicData.ColumnMetadata", "ColumnMetadata")
                        .WithMany("TableDatas")
                        .HasForeignKey("ColumnMetadataId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Senparc.Xncf.DynamicData.TableMetadata", null)
                        .WithMany("TableDatas")
                        .HasForeignKey("TableMetadataId");

                    b.Navigation("ColumnMetadata");
                });

            modelBuilder.Entity("Senparc.Xncf.DynamicData.ColumnMetadata", b =>
                {
                    b.Navigation("TableDatas");
                });

            modelBuilder.Entity("Senparc.Xncf.DynamicData.TableMetadata", b =>
                {
                    b.Navigation("ColumnMetadatas");

                    b.Navigation("TableDatas");
                });
#pragma warning restore 612, 618
        }
    }
}
