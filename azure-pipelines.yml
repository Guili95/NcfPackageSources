trigger:  
- master  
  
pool:  
  vmImage: 'windows-latest'  
  
variables:  
  solution: '**/NcfPackageSources.sln'  
  buildPlatform: 'Any CPU'  
  buildConfiguration: 'Release'  
  
steps:  
# - task: UseDotNet@2  
#   displayName: 'Use .NET SDK 6'  
#   inputs:  
#     version: '6.x'  
#     packageType: 'sdk'  
#     performMultiLevelLookup: true  
#     includePreviewVersions: true  
  
- task: DotNetCoreCLI@2  
  displayName: 'dotnet --list-sdks '  
  inputs:  
    command: custom  
    custom: '--list-sdks'  
  
- task: NuGetToolInstaller@1  
  displayName: 'Use NuGet 6.3.0'  
  inputs:  
    versionSpec: '6.3.0'  
    checkLatest: true  
  
- task: NuGetCommand@2  
  inputs:  
    command: 'restore'  
    restoreSolution: '**/NcfPackageSources.sln'  
    feedsToUse: 'config'  
    externalFeedCredentials: 'nuget-jeffrey-full-key'  
  
- task: DotNetCoreCLI@2  
  displayName: Build  
  inputs:  
    command: build  
    projects: '**/NcfPackageSources.sln'  
    arguments: '--configuration Release'  
  continueOnError: true  
  
- script: |  
    packages=(  
      "Senparc.Ncf.Core.0.*.nupkg"  
      "Senparc.Ncf.Core.AspNet*.nupkg"  
      "Senparc.Ncf.Log.*.nupkg"  
      "Senparc.Ncf.Mvc.UI.*.nupkg"  
      "Senparc.Ncf.Repository.*.nupkg"  
      "Senparc.Ncf.Service.*.nupkg"  
      "Senparc.Ncf.SMS.*.nupkg"  
      "Senparc.Ncf.Utility.*.nupkg"  
      "Senparc.Ncf.XncfBase.*.nupkg"  
      "Senparc.Ncf.AreaBase.*.nupkg"  
      "Senparc.Xncf.ChangeNamespace.*.nupkg"  
      "Senparc.Xncf.DynamicData.*.nupkg"  
      "Senparc.Xncf.DatabaseToolkit.*.nupkg"  
      "Senparc.Xncf.Swagger.*.nupkg"  
      "Senparc.Xncf.Terminal.*.nupkg"  
      "Senparc.Xncf.XncfBuilder.*.nupkg"  
      "Senparc.Ncf.Database.0.*.nupkg"  
      "Senparc.Ncf.DatabasePlant.*.nupkg"  
      "Senparc.Ncf.Database.MySql.*.nupkg"  
      "Senparc.Ncf.Database.InMemory.*.nupkg"  
      "Senparc.Ncf.Database.SqlServer.*.nupkg"  
      "Senparc.Ncf.Database.Sqlite.*.nupkg"  
      "Senparc.Ncf.Database.PostgreSQL.*.nupkg"  
      "Senparc.Ncf.Database.Oracle.*.nupkg"  
      "Senparc.Ncf.Database.Dm.*.nupkg"  
      "Senparc.Xncf.XncfBuilder.Template.*.nupkg"  
      "Senparc.Xncf.Menu.*.nupkg"  
      "Senparc.Xncf.XncfModuleManager.*.nupkg"  
      "Senparc.Xncf.SystemPermission.*.nupkg"  
      "Senparc.Xncf.SystemManager.*.nupkg"  
      "Senparc.Xncf.SystemCore.*.nupkg"  
      "Senparc.Xncf.AreasBase.*.nupkg"  
      "Senparc.Xncf.Tenant.Interface.*.nupkg"  
      "Senparc.Xncf.Tenant.*.nupkg"  
      "Senparc.Xncf.PromptRange.*.nupkg"  
      "Senparc.Xncf.AIKernel.*.nupkg"  
      "Senparc.Xncf.AgentsManager.*.nupkg"  
      "Senparc.Xncf.Dapr.*.nupkg"  
      "Senparc.Ncf.UnitTestExtension.*.nupkg"  
      "Senparc.Ncf.Core.0.*.snupkg"  
      "Senparc.Ncf.Core.AspNet*.snupkg"  
      "Senparc.Ncf.Log.*.snupkg"  
      "Senparc.Ncf.Mvc.UI.*.snupkg"  
      "Senparc.Ncf.Repository.*.snupkg"  
      "Senparc.Ncf.Service.*.snupkg"  
      "Senparc.Ncf.SMS.*.snupkg"  
      "Senparc.Ncf.Utility.*.snupkg"  
      "Senparc.Ncf.XncfBase.*.snupkg"  
      "Senparc.Ncf.AreaBase.*.snupkg"  
      "Senparc.Xncf.ChangeNamespace.*.snupkg"  
      "Senparc.Xncf.DynamicData.*.snupkg"  
      "Senparc.Xncf.DatabaseToolkit.*.snupkg"  
      "Senparc.Xncf.Swagger.*.snupkg"  
      "Senparc.Xncf.Terminal.*.snupkg"  
      "Senparc.Xncf.XncfBuilder.*.snupkg"  
      "Senparc.Ncf.Database.0.*.snupkg"  
      "Senparc.Ncf.DatabasePlant.*.snupkg"  
      "Senparc.Ncf.Database.MySql.*.snupkg"  
      "Senparc.Ncf.Database.InMemory.*.snupkg"  
      "Senparc.Ncf.Database.SqlServer.*.snupkg"  
      "Senparc.Ncf.Database.Sqlite.*.snupkg"  
      "Senparc.Ncf.Database.PostgreSQL.*.snupkg"  
      "Senparc.Ncf.Database.Oracle.*.snupkg"  
      "Senparc.Ncf.Database.Dm.*.snupkg"  
      "Senparc.Xncf.XncfBuilder.Template.*.snupkg"  
      "Senparc.Xncf.Menu.*.snupkg"  
      "Senparc.Xncf.XncfModuleManager.*.snupkg"  
      "Senparc.Xncf.SystemPermission.*.snupkg"  
      "Senparc.Xncf.SystemManager.*.snupkg"  
      "Senparc.Xncf.SystemCore.*.snupkg"  
      "Senparc.Xncf.AreasBase.*.snupkg"  
      "Senparc.Xncf.Tenant.Interface.*.snupkg"  
      "Senparc.Xncf.Tenant.*.snupkg"  
      "Senparc.Xncf.PromptRange.*.snupkg"  
      "Senparc.Xncf.AIKernel.*.snupkg"  
      "Senparc.Xncf.AgentsManager.*.snupkg"  
      "Senparc.Xncf.Dapr.*.snupkg"  
      "Senparc.Ncf.UnitTestExtension.*.snupkg"  
    )  
    for package in "${packages[@]}"; do  
      packageFile=$(ls $package)  
      packageVersion=$(echo $packageFile | grep -oP '\d+\.\d+\.\d+(-[a-zA-Z0-9]+)?')  
      packageName=$(echo $packageFile | grep -oP '^[\w\.]+')  
      if nuget list $packageName -Source "https://api.nuget.org/v3/index.json" | grep -q $packageVersion; then  
        echo "Package $packageName $packageVersion already exists. Skipping push."  
      else  
        echo "Pushing package $packageName $packageVersion."  
        nuget push $packageFile -Source "https://api.nuget.org/v3/index.json" -ApiKey $(nuget-jeffrey-full-key)  
      fi  
    done  
  displayName: 'Check and Push NuGet Packages'  
  env:  
    nuget-jeffrey-full-key: $(nuget-jeffrey-full-key)  
  
# 其他步骤...  
- task: DotNetCoreCLI@2  
  displayName: Publish  
  inputs:  
    command: publish  
    publishWebProjects: True  
    arguments: '--configuration $(BuildConfiguration) --output $(build.artifactstagingdirectory)'  
    zipAfterPublish: True  
  enabled: false  
  
- task: PublishBuildArtifacts@1  
  displayName: 'Publish Artifact'  
  inputs:  
    PathtoPublish: '$(build.artifactstagingdirectory)'  
  enabled: false  
  condition: succeededOrFailed()  